Making it all work with the Prolog rules
****************************************
Trying to make the revised version work with the Prolog rules raised
an annoying issue. Because of all the changes (and because I don't
know which set of Prolog flags Iman wants to be using at the moment),
we get numerous cases of phonetic prompts that cause the rules to
fail. Not just to not do anything, but to completely fail. We want the
Prolog rules to generate a file called phonprompts.txt that contains a
stash of things like 

text: rub~amA takuwnu bidAyapi Aln~ihAyapi liHarakapi HamAs
sampa: r^ u^ b b a m aa ## t a k uu n u ## b i d aa y a t i ## aa a l n i h aa y a t i ## l i h^ a r^ a^ k a t i ## h^ a m aa s ## 

Unfortunately I'm ending up with a phonprompts.txt that also contains
things like

'*/test-ABUDHABI_ABUDHNEWS_ARB_20070105_115800-male-native-18'
testRule failed on AixtiTAfi qutila fawDaY silAHK waOaxaVa lilqAnuwni biAlyadi faltAni Oamniy~N wADiHK wafADiHi

Obviously we don't want that, and that's what we will need to be
working on. You need to look at phonprompts.txt as generated by your
favourite set of flags to see how much this is happening for you -- it
may be that everything is actually just fine for you and I'm using a
wrong version of something. But if it does happen then we can't
generate things like words0.mlf, training.scp and so on by iterating
through the training.txt and phonprompts.txt in lock-step, because
phonprompts.txt contains a lot of nonsense.

So what I am doing is that as I go through phonprompts.txt I rewrite
training.txt so that it only contains sentences for which we did
indeed have a sampa transcription. That works, and we can indeed do
and end-to-end run using transcriptions generated by the Prolog
rules. At the moment, however, we lose a huge percentage of sentences,
so that I have to set an enormous initial value for N to get a
remotely useable set of training data. 

I may have the wrong Prolog files. I may be using the wrong
fixPhonTrans flags. I may be using the wrong Prolog flags. I may have
the wrong character set at some point. ... To be continued.

**************************************************************************
(the joys of working with real data: we have a prompt, which I am
pretty sure came unchanged from the GALA data, which looks like

ALAM_NEWSRPT_ARB_20070104_015800/originalprompts.segments:*/test-ALAM_NEWSRPT_ARB_20070104_015800-male-native-41
!ENTER نع9م مصطفى عبد الهادي مراسل قناة العلم في غزة شكرا جزيلا لك !EXIT

Madamira diacriticises this as

SENTENCE BREAK
--------------
;;; SENTENCE @@LAT@@*/test-ALAM_NEWSRPT_ARB_20070104_015800-male-native-41 @@LAT@@!ENTER نع 9 م مصطفى عبد الهادي مراسل قناة العلم في غزة شكرا جزيلا لك @@LAT@@!EXIT
;;WORD @@LAT@@*/test-ALAM_NEWSRPT_ARB_20070104_015800-male-native-41

...

--------------
;;WORD نع
;;LENGTH 2
;;OFFSET 0
;;SVM_PREDICTIONS: نع diac:naEi lex:waEaY asp:i cas:na enc0:0 gen:m mod:j num:p per:1 pos:verb prc0:0 prc1:0 prc2:0 prc3:0 stt:na vox:a
*1.000000 diac:نَعِ lex:وَعَى-ِ_1 bw:na/IV1P+Ei/IV+(null)/IVSUFF_MOOD:J gloss:be_aware_of;pay_attention_to pregloss:we sufgloss:[jus.] pos:verb prc3:0 prc2:0 prc1:0 prc0:0 per:1 asp:i vox:a mod:j gen:m num:p stt:na cas:na enc0:0 rat:na source:lex stem:عِ stemcat:IV-i
--------------
;;WORD 9
;;LENGTH 1
;;OFFSET 0
;;SVM_PREDICTIONS: 8 diac:8 lex:8 asp:na cas:na enc0:na gen:na mod:na num:na per:na pos:digit prc0:na prc1:na prc2:na prc3:na stt:na vox:na
*1.000000 diac:9 lex:9_0 bw:9/NOUN_NUM gloss:9 pos:digit prc3:na prc2:na prc1:na prc0:na per:na asp:na vox:na mod:na gen:na num:na stt:na cas:na enc0:na rat:na source:digit
--------------

even though there's no white space around the 9, and then it decides
that the diacriticised form is "9". And then all sorts of things go
wrong for us, so I'm treating sentences with digits in the same way as
foreign sentences -- I didn't hit this one till I tried to make a
training set of 5000 sentences, so that's 1/5000 = 0.02% of sentences
that I am ignoring, which I think we can afford to do)
